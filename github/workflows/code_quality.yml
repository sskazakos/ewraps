
name: Code Quality

on: [pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      py_files: ${{ steps.changed_files.outputs.py_files }}
    steps:
    - uses: actions/checkout@v4
    - name: Fetch 1 commit from tip of each branch, so we can compare
      run: git fetch --depth=1
    - id: changed_files
      name: Find and store Python files that are changing in this PR
      run: |
        py_files=$(git diff --diff-filter=d --name-only origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF | egrep '.py$' | tr '\n' ' ')
        echo "py_files=$py_files" >> "$GITHUB_OUTPUT"
  checks:
    needs: setup
    if: ${{ needs.setup.outputs.py_files != '' }}
    env:
      PY_FILES: ${{ needs.setup.outputs.py_files }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Ruff lint check
      uses: chartboost/ruff-action@v1
      with:
        src: "${{ env.PY_FILES }}"
        version: 0.3.5
    - name: Black format check
      uses: psf/black@stable
      with:
        options: "--check --verbose"
        src: "${{ env.PY_FILES }}"
        version: "24.3.0"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Analysing the code with pylint
      run: |
        python -m pylint --rcfile=.pylintrc ${{ env.PY_FILES }}
    - name: Analysing the code with radon
      run: |
        python -m radon cc ${{ env.PY_FILES }}
    - name: Analysing the code with xenon
      run: |
        python -m xenon ${{ env.PY_FILES }} -b B -m A -a A
